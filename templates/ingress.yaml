{{- if ne .Values.service.type "LoadBalancer" }}
{{- $fallbackName := printf "%s-%s-shared-%s" .Release.Namespace .Values.ingress.type .Values.ingress.cluster -}}
{{- $appName := .Values.overrideName | default $fallbackName -}}
{{- $port := .Values.deployment.port | default 8080 -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $appName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: instance
    {{- if eq .Values.ingress.type "internal" }}
    alb.ingress.kubernetes.io/scheme: internal
    {{- else  }}
    alb.ingress.kubernetes.io/scheme: internet-facing
    {{- end}}
    alb.ingress.kubernetes.io/attributes: access_logs.s3.enabled=true,access_logs.s3.bucket={{ .Values.ingress.bucketName }},access_logs.s3.prefix={{ $appName }}
    alb.ingress.kubernetes.io/listen-ports: "[{\"HTTPS\": 443, \"HTTP\": 80}]"
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.certArn }}
    alb.ingress.kubernetes.io/security-groups: {{ .Values.ingress.securityGroup }}
  labels:
    app: {{ include "alb-ingress-default.name" . }}
    chart: {{ include "alb-ingress-default.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    albIngressName: "default"
spec:
  rules:
    - host: {{ $appName }}.{{ .Values.ingress.domain }}
      http:
        paths:
          - path: {{ .Values.ingress.path }}
            backend:
              serviceName: {{ $appName }}-np
              servicePort: {{ $port }}
{{- end }}
