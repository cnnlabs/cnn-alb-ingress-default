{{- if .Values.deployment.create -}}
{{- $fallbackName := printf "%s-%s-shared-%s" .Release.Namespace .Values.ingress.type .Values.ingress.cluster -}}
{{- $appName := .Values.overrideName | default $fallbackName -}}
{{- $port := .Values.deployment.port | default 8080 }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $appName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "alb-ingress-default.name" . }}
    chart: {{ include "alb-ingress-default.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    appSelector: deployment-{{ $appName }}
    albIngressName: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "alb-ingress-default.name" . }}
      release: {{ .Release.Name }}
      appSelector: deployment-{{ $appName }}
  template:
    metadata:
      labels:
        app: {{ include "alb-ingress-default.name" . }}
        release: {{ .Release.Name }}
        appSelector: deployment-{{ $appName }}
        logzio: {{ .Values.logzio }}
        albIngressName: "default"
      {{- if .Values.deployment.name }}
      annotations:
        production_monitoring: "{{ .Values.monitoring.enabled }}"
        kb_article: {{ .Values.monitoring.kb_article }}
      {{- end }}
    spec:
      containers:
        - name: {{ $appName }}
          image: "{{ .Values.image.url }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PORT
            value: {{ $port | quote }}
          ports:
            - name: http
              containerPort: {{ $port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
      imagePullSecrets:
      - name: quay
{{- end }}
